{"version":3,"sources":["Components/ContactList/ContactList.module.css","Components/FilterInput/Filter.module.css","redux/actions.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactTemplate.js","redux/selectors.js","Components/ContactList/ContactList.js","Components/FilterInput/FilterInput.js","App.js","redux/reducers.js","redux/store.js","index.js","Components/ContactForm/Contacts.module.css"],"names":["module","exports","addContact","createAction","deleteContact","filterContacts","InputForm","useState","name","setName","number","setNumber","nameInputId","shortid","generate","numberInputId","dispatch","useDispatch","contacts","useSelector","state","items","handleInputChange","e","currentTarget","value","className","f","forma","onSubmit","preventDefault","map","contact","includes","alert","addContactOnSubmit","id","forma__label","htmlFor","forma__input","type","pattern","title","required","onChange","forma__btn","ContactItem","s","contact__item","contact__btn","onClick","getvisibleContacts","normalizedFilter","filter","toLowerCase","ContactList","Filter","filteredID","target","filter__input","App","container","createReducer","action","payload","rootReducer","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","obj","persistor","persistStore","ReactDOM","render","StrictMode","data","loading","document","getElementById"],"mappings":"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","file":"static/js/main.a88db788.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"ContactList_contact__item__1MoGM\",\"contact\":\"ContactList_contact__22HpV\",\"contact__btn\":\"ContactList_contact__btn__7wuMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__input\":\"Filter_filter__input__3dNel\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/addContact');\r\nexport const deleteContact = createAction('contacts/deletecontact');\r\nexport const filterContacts = createAction('contacts/filterContact');","// import react, { Component } from \"react\";\r\nimport { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport f from './Contacts.module.css';\r\nimport { addContact } from '../../redux/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nexport default function InputForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n  \r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.items);\r\n\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n const handleSubmit = e => {\r\n   e.preventDefault();\r\n   \r\n      if (contacts.map(contact => contact.name).includes(name)) {\r\n      alert(`Sorry,  ${name} is already in contacs.`);\r\n      return;\r\n    }\r\n   \r\n  \r\n   const addContactOnSubmit = {\r\n     name,\r\n     number,\r\n     id: shortid.generate(),\r\n   }\r\n   dispatch(addContact(addContactOnSubmit));\r\n    setName('');\r\n    setNumber('');\r\n\r\n    };\r\n\r\n   \r\n\r\n  return (\r\n     <div className={f.forma}>\r\n          <form onSubmit={handleSubmit} >\r\n          <label className={f.forma__label} htmlFor={nameInputId}>\r\n            NAME\r\n            <input className={f.forma__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n                        onChange={handleInputChange}\r\n                        id={nameInputId}\r\n            />\r\n          </label>\r\n\r\n          <label className={f.forma__label} htmlFor={numberInputId} >\r\n            NUMBER\r\n            <input className={f.forma__input}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n                        onChange={handleInputChange}\r\n                        id={numberInputId}\r\n            />\r\n          </label>\r\n\r\n          <button className={f.forma__btn} type=\"submit\">Add Contact</button>\r\n        </form>\r\n</div>\r\n   )\r\n}\r\n\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/actions';\r\n\r\nexport default function ContactItem({ id, name, number }) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n        <li className={s.contact}>\r\n            <span className={s.contact__item}>{name}</span>\r\n            <span className={s.contact__item}>{number}</span>\r\n             <button className={s.contact__btn}  type=\"button\" onClick={() => dispatch(deleteContact(id))} >Delete</button>    \r\n            </li>\r\n        </>\r\n        )\r\n};\r\n\r\nContactItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n   \r\n};","\r\n\r\n    \r\n export const getvisibleContacts = ({items, filter}) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };","\r\nimport ContactItem from './ContactTemplate'\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { getvisibleContacts } from '../../redux/selectors';\r\n\r\nexport default function ContactList() {\r\n    const contacts = useSelector(getvisibleContacts);\r\n\r\n\r\n    return (\r\n        <ul > {\r\n            contacts.map(({ id, name, number }) => (\r\n                <ContactItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n          \r\n                />\r\n            ))\r\n        }\r\n       \r\n            </ul> \r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n \r\n\r\n","import shortid from \"shortid\";\r\n// import PropTypes from 'prop-types';\r\nimport f from './Filter.module.css';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/actions\";\r\n\r\nexport default function Filter() {\r\n    const filter = useSelector(state => state.filter);\r\n    const dispatch = useDispatch();\r\n    const filteredID = shortid.generate();\r\n    return (\r\n        <>\r\n            <label htmlFor={filteredID}>Find contacts by name\r\n                <input type=\"text\"\r\n                    id={filteredID}\r\n                    value={filter}\r\n                    onChange={e => dispatch(filterContacts(e.target.value))}\r\n                    className={f.filter__input}\r\n                \r\n                />\r\n            \r\n            </label>\r\n        </>\r\n    );\r\n};\r\n\r\n// Filter.propTypes = {\r\n//     value: PropTypes.string,\r\n//     onchange: PropTypes.func,\r\n// }","import InputForm from './Components/ContactForm';\nimport { ContactList } from './Components/ContactList';\nimport Filter from './Components/FilterInput';\nimport s from './Components/ContactForm/Contacts.module.css';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nexport default function App() {\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <InputForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, deleteContact, filterContacts } from './actions';\r\n\r\nconst items = createReducer([], {\r\n    [addContact]: (state, action) => [...state, action.payload],\r\n    [deleteContact]: (state, action) => state.filter((contact) => contact.id !== action.payload),\r\n   \r\n\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [filterContacts]: (state, action) => action.payload,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n    items,\r\n    filter,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers\";\r\n// import { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n    devTools: true \r\n    //  process.env.NODE_ENV === 'development'\r\n\r\n});\r\n\r\nconst persistor = persistStore(store);\r\nconst obj = { store, persistor };\r\n\r\nexport default obj;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport data from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={data.store}>\n      <PersistGate loading={null} persistor={data.persistor}>\n        <App />\n        </PersistGate>\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Contacts_container__29ig5\",\"forma__input\":\"Contacts_forma__input__3KDLA\",\"forma__btn\":\"Contacts_forma__btn__2rE3R\",\"forma__label\":\"Contacts_forma__label__2E_ka\"};"],"sourceRoot":""}